#!/usr/bin/env python3
# from typing import *
import collections
import sys


sys.setrecursionlimit(10**7)

# def solve(N: int, Q: int, a: List[int], b: List[int], p: List[int], x: List[int]) -> List[str]:


def solve(N, Q, a, b, p, x):
    G = collections.defaultdict(set)
    C = collections.defaultdict(set)
    ans = [0 for _ in range(N)]
    for aa, bb in zip(a, b):
        G[aa-1].add(bb-1)
        G[bb-1].add(aa-1)

    for pp, xx in zip(p, x):
        ans[pp-1] += xx

    def dfs(i, p):
        for n in G[i]:
            if n != p:
                ans[n] += ans[i]
                dfs(n, i)

    dfs(0, -1)
    return ans

# generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)


def main():
    N, Q = map(int, input().split())
    a = [None for _ in range(N - 1)]
    b = [None for _ in range(N - 1)]
    p = [None for _ in range(Q)]
    x = [None for _ in range(Q)]
    for i in range(N - 1):
        a[i], b[i] = map(int, input().split())
    for i in range(Q):
        p[i], x[i] = map(int, input().split())
    ans = solve(N, Q, a, b, p, x)
    print(*[ans[i] for i in range(N)])


if __name__ == '__main__':
    main()
